#include<stdio.h>


    int x[20],w[20],count,d;
    void sum_of_subsets(int s, int k, int rem)
    {  
        int i;
        x[k] = 1;
        if( s + w[k] == d)
        {  
	    //if sub set found
            printf(" subset = %d",count);
            for(i=1 ; i <= k ; i++)
                if ( x[i] == 1)
                    printf("%d  ", w[i]);
            printf("\n");
        }
        else if ( s + w[k] + w[k+1] <= d)//left tree evaluation
              sum_of_subsets(s+w[k], k+1, rem-w[k]);

        if( ( s + rem - w[k] >= d) && ( s + w[k+1]) <= d)//right tree evaluation
        { 
                x[k] = 0;
                sum_of_subsets(s,k+1,rem-w[k]);
        }
    }
    
    
    int main() 
    {
        int sum = 0,n,i;
        
		printf("\n Enter the no.of elements");
        scanf("%d", &n);
		
       
        printf("\n enter the elements in increasing order");
        for( i = 1; i <= n ; i++)
        {    
            scanf("%d",&w[i]);
            sum=sum+w[i];
        }
        printf("\n enter the sum");
        scanf("%d",&d);
    
        if ( ( sum < d ) || ( w[0] > d ) )
            printf("No subset possible\n");
        else
            sum_of_subsets(0,1,sum);
    }
