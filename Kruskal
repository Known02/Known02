#include<stdio.h>
void kruskal(int cost[5][5],int n)
{
	int par[n];
	int a=0,b=0,u=0,v=0,min,i,j,mincost=0,ne=1;
	for(i=0;i<n;i++)
	   par[i]=-1;
	printf("\n the min spanning tree edges are");
	while(ne<=n-1)
	{
		min=999;
		for(i=0;i<n;i++)
		   for(j=0;j<n;j++)
		      if(cost[i][j]<n)
		      {
		      	min=cost[i][j];
		      	a=u=i;
		      	b=v=j;
			  }
			  while(par[u]!=-1)
			       u=par[u];
			  while(par[v]!=-1)
			       v=par[v];
			  if(u!=v)
			  {
			  	printf("from vertex %d to vertex %d the cost is =%d\n",a,b,min);
			  	mincost=min;
			  	if(par[b]==-1)
			  	  par[b]=a;
			  	  else
			  	  par[a]=b;
			  	ne++;
			  }
			  cost[a][b]=cost[b][a]=999;
	}
	printf("cost of MST =%d",mincost);
}
void main()
{
	int n,c[5][5],i,j;
	printf("\n enter the number of vertices");
	scanf("%d",&n);
	printf("enter the adjacency matrix");
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			scanf("%d",&c[i][j]);
			if(c[i][j]==0)
			  c[i][j]=999;
		}
	}
	kruskal(c,5)
}
